/**
 K√©sz√≠ts egy JavaScript programot, amely egy k√∂nyvt√°r k√∂nyveit kezeli objektumok seg√≠ts√©g√©vel. Minden k√∂nyvet egy objektum reprezent√°l a k√∂vetkez≈ë tulajdons√°gokkal:

cim (string)

szerzo (string)

ev (sz√°m, kiad√°s √©ve)

kolcsonozve (boolean ‚Äì true, ha ki van k√∂lcs√∂n√∂zve)

Az √∂sszes k√∂nyvet egy t√∂mbbe rendezd.

üß† Feladatok:
Sz√°ml√°l√°s t√©tele: √çrd meg, hogy h√°ny k√∂nyv van √∂sszesen, √©s h√°ny van ezek k√∂z√ºl kik√∂lcs√∂n√∂zve.

Keres√©s t√©tele: √çrj f√ºggv√©nyt, amely visszaadja egy megadott c√≠m≈± k√∂nyv objektum√°t (pl. "T√ºskev√°r").

Minimum kiv√°laszt√°s t√©tele: Melyik a legr√©gebbi k√∂nyv a k√∂nyvt√°rban?

Sz≈±r√©s: K√©sz√≠ts egy √∫j t√∂mb√∂t, amely csak a szabad (nem k√∂lcs√∂nz√∂tt) k√∂nyveket tartalmazza.

List√°z√°s: √çrj f√ºggv√©nyt, ami ki√≠rja az √∂sszes k√∂nyv c√≠m√©t √©s szerz≈ëj√©t egy sz√©p list√°ban.
 */

const konyvek = [
    { cim: "Egri csillagok", szerzo: "G√°rdonyi G√©za", ev: 1899, kolcsonozve: false },
    { cim: "P√°l utcai fi√∫k", szerzo: "Moln√°r Ferenc", ev: 1907, kolcsonozve: true },
    { cim: "T√ºskev√°r", szerzo: "Fekete Istv√°n", ev: 1957, kolcsonozve: false },
    { cim: "A k≈ësz√≠v≈± ember fiai", szerzo: "J√≥kai M√≥r", ev: 1869, kolcsonozve: true }
];

// 1. feladat

function szamol(tomb){
    let darab = 0;

    for(let i = 0; i < tomb.length; i++){

        if(tomb[i].kolcsonozve === true){
            darab++;
        }
    }
    return darab;
}

console.log(`A k√∂nyvt√°rban ${konyvek.length} db k√∂nyv tal√°lhat√≥, ebb≈ël ${szamol(konyvek)} db van kik√∂lcs√∂n√∂zve.\n`);


// 2. feladat

var keres = "T√ºskev√°r";

function kereses(tomb, tulajdonsag){
    let i = 0;

    while(i < tomb.length && tomb[i].cim != tulajdonsag){
        i++;
    }

    if(i < tomb.length){
        return tomb[i];
    }
    else{
        return 0;
    }
}

var konyv = kereses(konyvek, keres);

if(konyv){
    console.log(`A keresett k√∂nyv c√≠me: ${konyv.cim}\nszerz≈ëje: ${konyv.szerzo}\nkiad√°s √©ve: ${konyv.ev}\nK√∂lcson√∂zhet≈ë: ${konyv.kolcsonozve}\n`);
}
else{
    console.log("Nincs ilyen k√∂nyv.\n");
}

 
// 3. feladat

function legregebbi(tomb){
    let min = 0;

    for(let i = 1; i < tomb.length; i++){

        if(tomb[i].ev < tomb[min].ev){
            min = i;
        }
    }
    return min;
}

console.log(`A legr√©gebbi k√∂nyv: ${konyvek[legregebbi(konyvek)].cim}\n`);


// 4. feladat

var nemK = [];

function nemKolcsonzott(tomb, uj_tomb){
    let szamlalo;

    for(let i = 0; i < tomb.length; i++){

        if(tomb[i].kolcsonozve === false){
            uj_tomb[szamlalo] = tomb[i];
            szamlalo++;
        }
    }
}

nemKolcsonzott(konyvek, nemK);


// 5. feladat

function kiir(tomb){
    console.log('K√∂nyvek:');

    for(let i = 0; i < tomb.length; i++){
        console.log(`\t${tomb[i].szerzo} - ${tomb[i].cim}`);
    }
}

kiir(konyvek);